/*
 * "Guess the number game"
 *
 * @version 1.1
 *
 * 19.10.2015
 *
 * @author Roman Sheludko
 */
package training.guessthenum;

import java.util.ArrayList;
import java.util.List;

/**
 * GameInfo class provides game statistics and contains methods with info
 * messages
 */
class GameInfo {

  /**
     * Array list that contains all user's attempts
     */
    private List<Integer> attempts = new ArrayList<>();

    /**
     * Default constructor
     */
    GameInfo() {
    }

    /**
     * Method that adds user's attempt to attempts container
     *
     * @param userChoice number that user made in attempt
     */
    void addAttempt(int userChoice) {
        attempts.add(userChoice);
    }

    /**
     * Method that prints current statistic of the game
     *
     * @param gameRange - contains lower and upper borders of game range
     */
    void printCurrentStats(int[] gameRange) {
        printLine();
        if (attempts.size() != 0) {
            System.out.println("Number of attempts: " + attempts.size());
            System.out.println("Last attempt: " + attempts.get(attempts.size()-1));
        }
        System.out.println("Range is: min - " + gameRange[0]
                + " max - " + gameRange[1]);
        printLine();
    }

    private void printLine(){
        System.out.println("------------------------------------");
    }

    /**
     * Method that prints hello message to user
     */
    void printGreetings() {
        System.out.println("Hello, User, I've chosen the number, can you guess it?");
        System.out.println("Type in " + Game.QUIT_NUMBER + " to stop game immediately!");
    }

    /**
     * Method that prints message before each user's attempt
     */
    void printAttemptMessage() {
        System.out.print("Your choice: ");
    }

    /**
     * Method that prints message if user gets out of game range
     */
    void printOutOfRangeMessage() {
        System.out.println("Number is not in the range, try another one");
    }

    /**
     * Method that prints tip about user's number being more or less than goal
     * number
     *
     * @param userChoice - user's inputed number
     * @param goalNumber - number randomly generated by game
     */
    void printTip(int userChoice, int goalNumber) {
        if (userChoice > goalNumber) {
            System.out.println("The chosen number is less than yours");
        } else {
            System.out.println("The chosen number is bigger than yours");
        }
    }

    /**
     * Method that prints info if NaN was inputed by user
     */
    void printNaNMessage() {
        System.out.println("Input is NaN, be attentive");
    }

    /**
     * Method that prints endgame statistic
     *
     * @param isGoalAchieved if false means game was aborted, in that case
     *                       method didn't print out statistic
     */
    void printEndGameStats(boolean isGoalAchieved) {
        if (isGoalAchieved) {
            System.out.println("You have won, congratulations!!!");
            System.out.println("Attempts made - " + attempts.size());
            System.out.println("List of user attempts:");
            for (int i = 0; i < attempts.size(); i++) {
                System.out.println("Attempt #" + (i + 1) + " - " + attempts.get(i));
            }
        } else {
            System.out.println("Goodbye!");
        }
        printLine();
    }
}
